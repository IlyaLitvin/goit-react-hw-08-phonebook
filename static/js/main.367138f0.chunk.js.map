{"version":3,"sources":["redux/contacts/listActions.js","routes.js","redux/auth/authOperations.js","redux/auth/authActions.js","components/UserMenu/UserMenu.js","components/Loading/Loading.js","App.js","redux/contacts/listReducer.js","redux/auth/authReducer.js","redux/store.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactRequest","removeContactSuccess","removeContactError","filterContact","HomeView","LoginView","RegisterView","ContactsView","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","connect","state","name","user","avatar","onLogout","authOperations","src","alt","width","type","onClick","App","color","height","timeout","React","Component","AsynkHomeView","lazy","AsynkLoginView","AsynkRegisterView","AsynkContactsView","styles","loading","this","props","onGetCurrentUser","fallback","style","isAuthenticated","exact","path","routes","component","to","items","createReducer","listAction","action","payload","_","filter","contact","id","combineReducers","initialUserState","email","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.367138f0.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst fetchContactRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchError\");\r\n\r\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactError = createAction(\"contacts/removeError\");\r\n\r\nconst filterContact = createAction(\"FILTER_CONTACTS\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  filterContact,\r\n};\r\n","export default {\r\n  HomeView: \"/\",\r\n  LoginView: \"/login\",\r\n  RegisterView: \"/register\",\r\n  ContactsView: \"/contacts\",\r\n};\r\n","import axios from \"axios\";\r\nimport authActions from \"./authActions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = (credentials) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post(\"/users/login\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch((error) => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch((error) => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport authOperations from \"../../redux/auth/authOperations\";\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div>\r\n    <img src={avatar} alt=\"avatar\" width=\"50\" />\r\n    <span>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: state.auth.user.name,\r\n  avatar:\r\n    \"https://e7.pngegg.com/pngimages/544/445/png-clipart-marge-simpson-catwoman-batman-homer-simpson-bart-simpson-catwoman-fictional-characters-fictional-character.png\",\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu\r\n);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Rings\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component, lazy, Suspense } from \"react\";\nimport routes from \"./routes.js\";\nimport { Redirect, Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport UserMenu from \"./components/UserMenu/UserMenu\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"./redux/auth/authOperations\";\nimport Loader from \"./components/Loading/Loading\";\n\nconst AsynkHomeView = lazy(() => import(\"./views/HomeView.js\"));\nconst AsynkLoginView = lazy(() => import(\"./views/LoginView.js\"));\nconst AsynkRegisterView = lazy(() => import(\"./views/RegisterView.js\"));\nconst AsynkContactsView = lazy(() => import(\"./views/ContactsView.js\"));\n\nconst styles = {\n  loading: {\n    color: \"blue\",\n  },\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <BrowserRouter>\n          <Suspense\n            fallback={\n              <>\n                <h1 style={styles.loading}>\n                  Loading... <Loader />\n                </h1>\n              </>\n            }\n          >\n            {this.props.isAuthenticated && <UserMenu />}\n            <Switch>\n              <Route exact path={routes.HomeView} component={AsynkHomeView} />\n              <Route exact path={routes.LoginView} component={AsynkLoginView} />\n              <Route\n                exact\n                path={routes.RegisterView}\n                component={AsynkRegisterView}\n              />\n              <Route\n                exact\n                path={routes.ContactsView}\n                component={AsynkContactsView}\n              />\n              <Redirect to=\"/\" />\n            </Switch>\n          </Suspense>\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.token,\n});\n\nexport default connect(mapStateToProps, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n","import { combineReducers } from \"redux\";\r\nimport listAction from \"./listActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst newContact = (state, action) => [...state, action.payload];\r\n\r\nconst removeAnyContact = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [listAction.addContactSuccess]: newContact,\r\n  [listAction.fetchContactSuccess]: (_, action) => action.payload,\r\n  [listAction.removeContactSuccess]: removeAnyContact,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [listAction.addContactRequest]: () => true,\r\n  [listAction.addContactSuccess]: () => false,\r\n  [listAction.addContactError]: () => false,\r\n  [listAction.fetchContactRequest]: () => true,\r\n  [listAction.fetchContactSuccess]: () => false,\r\n  [listAction.fetchContactError]: () => false,\r\n  [listAction.removeContactRequest]: () => true,\r\n  [listAction.removeContactSuccess]: () => false,\r\n  [listAction.removeContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [listAction.filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ items, loading, filter });\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./authActions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import contactsReducer from \"./contacts/listReducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport authReducer from \"./auth/authReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}